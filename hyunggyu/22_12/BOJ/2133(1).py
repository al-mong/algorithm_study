# 타일 채우기
# 3*n 벽을 2*1 1*2크기의 타일로 채우는 경우의 수
# --  11  -- 12
# --  11  11 3
# --  --  11 4
#1--1
#1--1
#----

arr = {
    (1,1,1) : [[2,2,2]],
    (1,1,2) : [[2,2,1]],
    (1,2,2) : [[2,3,4],[2,1,1]],
    (1,3,4) : [[2,3,4],[2,1,1]],
    (2,1,1) : [[1,2,2]],
    (2,2,1) : [[1,1,2],[3,4,2]],
    (2,2,2) : [[1,1,1],[1,3,4],[3,4,1]],
    (2,3,4) : [[1,3,4],[3,4,1],[1,1,1]],
    (3,4,1) : [[3,4,2],[1,1,2]],
    (3,4,2) : [[1,1,1],[3,4,1],[1,3,4]],
}

def tile(i):
    global result #  결과 개수
    global N
    if i > N:
        return
    if i == N:
        if dp[N-1] in [[2,2,2],[2,3,4],[3,4,2]]:
            result += 1
        return
    for j in arr[(dp[i-1][0],dp[i-1][1],dp[i-1][2])]:
        dp[i] = j
        tile(i+1)
        dp[i] = [0,0,0]
    
N = int(input())
# 1~30

dp = [[0,0,0] for _ in range(31)]
result = 0

# 초기값 가능성
dp[0] = [1,3,4]
tile(1)


dp[0] = [3,4,1]
tile(1)


dp[0] = [1,1,1]
tile(1)


print(result)