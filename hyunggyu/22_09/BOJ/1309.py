n = int(input())
# 2*n칸
# 마리수는 최대 n마리
# 1: 1 + 2가지 -3
# 2: 1 + 4 + 2 -7
# 3: 1 + 2*3 + 8 + 2 - 17
# 4: 1 + 2*4 + (2*5 + 2*3 + 2*1) + (2*3+2*2+2) +2
# 5: 1 + 2*5 + (2*7 + 2*5 + 2*3 + 2*1) + 
dp =[[0]*3 for _ in range(n+1)]
dp[0] = [1,0,0]
if n > 0:
    dp[1] = [1,1,1]
# 제일 밑칸의 경우의 수를 생각하는 것이다. 마지막 칸이 비었을 경우 그 위에 칸은 비거나, 왼쪽 오른쪽 다된다.
for i in range(2, n + 1):
    dp[i][0] = (dp[i - 1][0] + dp[i - 1][1] + dp[i - 1][2]) % 9901
    dp[i][1] = (dp[i - 1][0] + dp[i - 1][2]) % 9901
    dp[i][2] = (dp[i - 1][0] + dp[i - 1][1]) % 9901
    # 아무것도 하지 않는 것 0
    # 왼쪽 타일을 선택하는 경우 1
    # 오른쪽 타일을 선택하는 경우 2
print(sum(dp[n]) % 9901)